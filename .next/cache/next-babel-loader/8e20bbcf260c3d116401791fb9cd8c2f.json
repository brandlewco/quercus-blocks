{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kendallstrautman/Forestry/tina/tina-test-sites/open-author-demo/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Layout from '../components/Layout';\nimport Blocks from '../components/Blocks';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    pathname: \"/\",\n    siteTitle: props.title,\n    siteDescription: props.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Blocks, {\n    data: props.blocks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })));\n};\n\nexport default Index;\n\nIndex.getInitialProps = function _callee() {\n  var configData, blocksData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(import(\"../data/config.json\"));\n\n        case 2:\n          configData = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(import('../data/blocks.json'));\n\n        case 5:\n          blocksData = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, configData, {\n            blocks: blocksData\n          }));\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/kendallstrautman/Forestry/tina/tina-test-sites/open-author-demo/src/pages/index.js"],"names":["Layout","Blocks","Index","props","title","description","blocks","getInitialProps","configData","blocksData"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACtB,SACC,MAAC,MAAD;AACC,IAAA,QAAQ,EAAC,GADV;AAEC,IAAA,SAAS,EAAEA,KAAK,CAACC,KAFlB;AAGC,IAAA,eAAe,EAAED,KAAK,CAACE,WAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,KAAK,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALD,CADD;AAWA,CAZD;;AAcA,eAAeJ,KAAf;;AAEAA,KAAK,CAACK,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACE,6BADF;;AAAA;AACjBC,UAAAA,UADiB;AAAA;AAAA,2CAEE,OAAO,qBAAP,CAFF;;AAAA;AAEjBC,UAAAA,UAFiB;AAAA,6DAInBD,UAJmB;AAKtBF,YAAAA,MAAM,EAAEG;AALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import Layout from '../components/Layout'\nimport Blocks from '../components/Blocks'\n\nconst Index = props => {\n\treturn (\n\t\t<Layout\n\t\t\tpathname='/'\n\t\t\tsiteTitle={props.title}\n\t\t\tsiteDescription={props.description}\n\t\t>\n\t\t\t<section>\n\t\t\t\t<Blocks data={props.blocks} />\n\t\t\t</section>\n\t\t</Layout>\n\t)\n}\n\nexport default Index\n\nIndex.getInitialProps = async function() {\n\tconst configData = await import(`../data/config.json`)\n\tconst blocksData = await import('../data/blocks.json')\n\treturn {\n\t\t...configData,\n\t\tblocks: blocksData\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}